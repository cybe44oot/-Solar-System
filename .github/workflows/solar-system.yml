name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  unit-testing:
    name: Unit Testing
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }} # or 'mongodb://localhost:27017/superData'
      MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

          # these env will be used in the docker test step
    strategy:
      matrix:
        node-version: [19, 20]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-${{ matrix.node-version }}-${{ matrix.os }}
          path: test-results.xml

  code_coverage:
    name: Code Coverage
    container: 
      image: node:18
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        options: 
          --name mongo
    env:
      MONGO_URI: mongodb://mongo:27017/superData
      MONGO_USERNAME: non-prod-user
      MONGO_PASSWORD: non-prod-password

    runs-on: ubuntu-latest
    continue-on-error: true # prevent workflow failure if this job fails
    #needs: unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: Setup NodeJS Version
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 18
      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('/package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Code Coverage
        run: npm run coverage

      - name: Archive Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Coverage-Report-${{ matrix.node-version }}-${{ matrix.os }}
          path: coverage
          retention-days: 5 # used for storing the artifact for 5 days only

  docker:
    name: containerization
    needs: [unit-testing, code_coverage]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: docker login 
        uses: docker/login-action@v2
        with: 
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker build for test
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false # just build and test 
          tags: ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}

      - name: docker test
        run: |
          docker images 
          docker run --name solar-system-test -d -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}
          export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-test)
          echo "Container IP Address: $IP"
          echo testing the image url using wget 
          curl http://localhost:3000/live

      - name: docker push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}

      - name: ghcr login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: container registry push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/github-actions-solar-system:${{ github.sha }}







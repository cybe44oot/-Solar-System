name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ${{ matrix.os }}
    env:                          # make env visible to all steps
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    strategy:
      matrix:
        node-version: [19, 20]
        os: [ubuntu-latest]       # Windows runners do not support services
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code_coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    continue-on-error: true        # prevent workflow failure if this job fails
    needs: unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Code Coverage
        run: npm run coverage

      - name: Archive Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: Coverage-Report
          path: coverage
          retention-days: 5         # store the artifact for 5 days

  docker:
    name: Containerization
    needs: [unit-testing, code_coverage]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:                           # so docker run sees these too
      MONGO_URI: ${{ secrets.MONGO_URI }}
      MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Docker login (DockerHub)
        uses: docker/login-action@v2
        with: 
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & push both DockerHub and GHCR in one go
      - name: Build and Push Docker Images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/github-actions-solar-system:${{ github.sha }}

      - name: Run Container for Testing
        run: |
          docker images 
          docker run --name solar-system-test -d -p 3000:3000 \
            -e MONGO_URI="${MONGO_URI}" \
            -e MONGO_USERNAME="${MONGO_USERNAME}" \
            -e MONGO_PASSWORD="${MONGO_PASSWORD}" \
            ${{ vars.DOCKER_USERNAME }}/github-actions-solar-system:${{ github.sha }}
          # Wait a bit for app to come up
          sleep 10
          echo "Testing the image health endpoint..."
          wget -q -O - 127.0.0.1:3000/live | grep "ok"

      - name: GHCR login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

